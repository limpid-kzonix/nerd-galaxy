version = "3.5.8"

preset = default


align {
  preset = none
  stripMargin = yes
}

assumeStandardLibraryStripMargin = no

danglingParentheses {
  exclude = []
}

docstrings {
  forceBlankLineBefore = no
  oneline = keep
  style = SpaceAsterisk
  wrap = no
}

fileOverride {
  "glob:**/*.sbt" {
    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }

  "glob:**/project/*.scala" {
    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }
}

includeNoParensInSelectChains = yes

indent {
  ctrlSite = 4
  caseSite = 5
  withSiteRelativeToExtends = 3
  commaSiteRelativeToExtends = 8
}

indentOperator {
  exemptScope = all
}

lineEndings = preserve

maxColumn = 100

newlines {
  alwaysBeforeElseAfterCurlyIf = yes
  avoidInResultType = yes
  avoidForSimpleOverflow = [slc]
  beforeCurlyLambdaParams = multilineWithCaseOnly
  implicitParamListModifierForce = [after]
  inInterpolation = avoid

  topLevelStatementBlankLines = [
    {
      blanks {
        beforeAll = -1,
        afterAll = -1,
        beforeEndMarker = -1
      }

      minBreaks = 0
    },
    {
      blanks {
        beforeAll = -1,
        before = 1,
        after = 1,
        afterAll = -1,
        beforeEndMarker = -1
      }

      minBreaks = 1
    }
  ]
}

project {
  excludeFilters = [
    ".metals"
  ]
}

rewrite {
  redundantBraces {
    ifElseExpressions = yes
  }

  rules = [
    PreferCurlyFors
    RedundantBraces
    RedundantParens
    SortModifiers
  ]

  sortModifiers {
    order = [
      final
      sealed
      abstract
      override
      implicit
      private
      protected
      lazy
    ]
  }
}

rewriteTokens {
  "⇒" = "=>"
  "→" = "->"
  "←" = "<-"
}

runner {
  # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
  dialect = scala213
}

spaces {
  inImportCurlyBraces = yes
}

trailingCommas = multiple

verticalMultiline {
  arityThreshold = 3
  atDefnSite = yes
  newlineAfterOpenParen = yes
}


optIn.configStyleArguments = false
align = true
align.preset = most
align.multiline = true
assumeStandardLibraryStripMargin = false
align.stripMargin = true
align.arrowEnumeratorGenerator = true
align.openParenCallSite = true
align.openParenDefnSite = true
optIn.configStyleArguments = true
runner.optimizer.forceConfigStyleOnOffset = 3
runner.optimizer.forceConfigStyleMinArgCount = 2
danglingParentheses = true
danglingParentheses.defnSite = true
danglingParentheses.ctrlSite = true
danglingParentheses.callSite = true
danglingParentheses.exclude = [def]
docstrings.style = SpaceAsterisk
docstrings.oneline = fold
docstrings.wrap = yes
newlines.topLevelStatements = [before, after]
newlines.topLevelStatementsMinBreaks = 2
newlines.beforeCurlyLambdaParams = multilineWithCaseOnly
maxColumn = 120
rewrite.rules = [AvoidInfix, RedundantParens, RedundantBraces, SortModifiers, PreferCurlyFors, ExpandImportSelectors]
rewrite.redundantBraces.stringInterpolation = true
rewrite.redundantBraces.generalExpressions = true
rewrite.redundantBraces.ifElseExpressions = true
rewrite.redundantBraces.methodBodies = true
rewrite.redundantBraces.includeUnitMethods = true
rewrite.redundantBraces.parensForOneLineApply = true
rewrite.sortModifiers.order = [
  implicit
  final
  sealed
  abstract
  override
  private
  protected
  lazy
  open
  transparent
  inline
  infix
  opaque
]
rewrite.neverInfix.excludeFilters = [
  until
  to
  by
  eq
  ne
  "should.*"
  "contain.*"
  "must.*"
  in
  ignore
  be
  taggedAs
  thrownBy
  synchronized
  have
  when
  size
  only
  noneOf
  oneElementOf
  noElementsOf
  atLeastOneElementOf
  atMostOneElementOf
  allElementsOf
  inOrderElementsOf
  theSameElementsAs
]
rewrite.sortModifiers.order = ["private", "protected", "final", "sealed", "abstract", "implicit", "override", "lazy"]
spaces.inImportCurlyBraces = true
spaces.beforeContextBoundColon = IfMultipleBounds
spaces.inInterpolatedStringCurlyBraces = true

project.git = true
project.includeFilters = [
  ".*\\.scala$"
  ".*\\.sbt$"
  ".*\\.sc$"
]

literals.long = Upper
literals.float = Lower
literals.double = Lower
literals.hexDigits = Lower
literals.hexPrefix = Lower
literals.scientific = Lower

